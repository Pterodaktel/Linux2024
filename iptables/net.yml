---
- hosts: all
  become: true
 
  tasks:
  - name: Update cache
    ansible.builtin.apt:
      update_cache: true
      cache_valid_time: 3600
    tags:
      - update-apt

  - name: install packages 
    ansible.builtin.apt:
      pkg:
      - traceroute
      - net-tools
      state: latest      

  - name: install iptables-persistent 
    ansible.builtin.apt:
      name: iptables-persistent
      state: latest
    when: ansible_hostname == "inetRouter" or ansible_hostname == "inetRouter2"

  - name: install nmap
    ansible.builtin.apt:
      name: nmap
      state: latest
    when: ansible_hostname == "centralRouter" 
    tags: 
      - knock script

  - name: copy knock script
    ansible.builtin.copy:
      src: files/knock
      dest: /usr/local/bin/knock
      owner: root
      mode: 0755
    when: ansible_hostname == "centralRouter" 
    tags: 
      - knock script


  - name: install nginx 
    ansible.builtin.apt:
      name: nginx
      state: latest
    when: ansible_hostname == "centralServer" 

  - name: Disable IPv6
    ansible.builtin.sysctl:
      name: "{{ item }}"
      value: "1"
      state: "present"
      reload: "yes"
    with_items:
      - net.ipv6.conf.all.disable_ipv6
      - net.ipv6.conf.default.disable_ipv6
      - net.ipv6.conf.lo.disable_ipv6
    tags: 
      - disable_ipv6

  - name: Disable ufw firewall
    ansible.builtin.systemd:
      name: ufw.service
      state: stopped
      enabled: false

  - name: Set up iptables
    template: 
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: root
      group: root
      mode: "{{ item.mode }}"
    with_items:
      - { src: "iptables_rules_{{ansible_hostname}}.ipv4", dest: "/etc/iptables/rules.v4", mode: "0644" }
    when: (ansible_hostname == "inetRouter" or ansible_hostname == "inetRouter2")   

  - name: Put iptables scripts
    template: 
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: root
      group: root
      mode: "{{ item.mode }}"
    with_items:
      - { src: "firewall_{{ansible_hostname}}.sh", dest: "/root/firewall.sh", mode: "0770" }
    when: (ansible_hostname == "inetRouter" or ansible_hostname == "inetRouter2")   


  - name: set up forward packages across routers
    ansible.builtin.sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      state: present
    when: "'routers' in group_names"

  - name: disable default route
    template: 
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: root
      group: root
      mode: 0600
    when: 
      - ansible_hostname != "inetRouter"
      - ansible_hostname != "inetRouter2"
    with_items:
      - { src: "templates/99-disable-network-config.cfg", dest: "/etc/cloud/cloud.cfg.d/99-disable-network-config.cfg" }
      - { src: "templates/50-cloud-init.yaml", dest: "/etc/netplan/50-cloud-init.yaml" }

  - name: add gateways
    template: 
      src: "50-vagrant_{{ansible_hostname}}.yaml"
      dest: /etc/netplan/50-vagrant.yaml
      owner: root
      group: root
      mode: 0600

  - name: restart hosts
    reboot:
      reboot_timeout: 600

