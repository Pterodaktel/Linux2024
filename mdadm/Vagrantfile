# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
    :mdadm => {
        :box_name => "bento/ubuntu-24.04",
        :ip_addr  => '192.168.11.102',
        :net_name => "mynet",

	:disks => {
		:sata1 => {
			:dfile => './sata1.vdi',
			:size => 100, # Megabytes
			:port => 1
		},
		:sata2 => {
			:dfile => './sata2.vdi',
			:size => 100,
			:port => 2
		},
		:sata3 => {
			:dfile => './sata3.vdi',
			:size => 100,
			:port => 3
		},
		:sata4 => {
			:dfile => './sata4.vdi',
			:size => 100, 
			:port => 4
		}
	}
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box       = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s
          box.vm.network "private_network", ip: boxconfig[:ip_addr], virtualbox__intnet: boxconfig[:net_name]

          box.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm", :id, "--memory", "2048"]

			    boxconfig[:disks].each do |dname, dconf|
				  unless File.exist?(dconf[:dfile])
					vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
				  end
		  end

		  boxconfig[:disks].each do |dname, dconf|
					 vb.customize ['storageattach', :id,  '--storagectl', 'SATA Controller', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
		  end
      end
	  
 	  box.vm.provision "shell", inline: <<-SHELL
	      mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh
              #apt-get update && apt-get upgrade -y
	      apt-get install -y mdadm smartmontools hdparm gdisk
	      timedatectl set-timezone Europe/Moscow
  	      mdadm --create --verbose /dev/md0 -l 10 --force -n 4 /dev/sd{b,c,d,e}
              echo "DEVICE partitions" > /etc/mdadm/mdadm.conf
	      mdadm --detail --scan --verbose | awk '/ARRAY/ {print}' >> /etc/mdadm/mdadm.conf
              parted -s /dev/md0 mklabel gpt
	      parted /dev/md0 mkpart primary ext4 0% 20% 
	      parted /dev/md0 mkpart primary ext4 20% 40%
	      parted /dev/md0 mkpart primary ext4 40% 60%
	      parted /dev/md0 mkpart primary ext4 60% 80%
	      parted /dev/md0 mkpart primary ext4 80% 100%
	      for i in $(seq 1 5); do sudo mkfs.ext4 /dev/md0p$i; done
	      mkdir -p /raid/part{1,2,3,4,5}
	      for i in $(seq 1 5); do echo "/dev/md0p$i /raid/part$i ext4" >> /etc/fstab; done
              for i in $(seq 1 5); do mount /dev/md0p$i /raid/part$i; done
	      update-initramfs -u
	      #echo "Rebooting the machine"	
	      #reboot
  	  SHELL
      end
  end
end
